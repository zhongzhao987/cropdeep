

var slideflag = "l8image";

var slidepos = {
    l8index :1,
    tempindex :1,
    reflectindex :1,
    ndviindex :1
}

function  plusSlides(n) {
    if( slideflag == "l8image" )
	showSlides(slidepos.l8index += n);
    else if( slideflag == "temperature" )
	showSlides(slidepos.tempindex += n);   
}

function currentSlide(n) {
    if( slideflag == "l8image" )
	showSlides(slidepos.l8index = n);
    else if( slideflag == "temperature" )
	showSlides(slidepos.tempindex = n);   
}

 
function addImages( index, total, data, time, slide){
    //var slides = document.getElementsByClassName("slideshow-container");
    var myslides = document.createElement("div");
    //myslides.setAttribute("class", "mySlides fade" );
    myslides.setAttribute("class", "mySlides" );
    myslides.setAttribute("align", "center");

    //var text1 = '<div class="numbertext">'+index+' / '+total+'</div>';
    //$(text1).appendTo(myslides);
    //var img1 = '<img id="image" src=C:\\image\\cellphon\\show\\'+index+'.png>';
    //<img src="data:image/bmp;base64",'+data+' style="width:512">
    var imgdata="data:image/bmp;base64,"+data;
    //alert(imgdata);
    var img1 = '<img src='+imgdata+'>';
    //alert(img1);
    $(img1).appendTo(myslides);
    
    /*
    var $min_span = $('<span>');
    $min_span.attr("class", "slidetext");
    $min_span.html(time);
    myslides.append($min_span);
    */
    
    var text2 = '<div class="slidetext">'+time+'</div>';
    $(text2).appendTo(myslides);
    

    //$('.slideshow-container').append(myslides);
    slide.append(myslides);
}

function addOwlImages( index, total, data, time){

    //var myslides = document.createElement("div");
    //myslides.setAttribute("class", "mySlides fade" );
    //myslides.setAttribute("class", "mySlides" );
    //myslides.setAttribute("align", "center");

    //var text1 = '<div class="numbertext">'+index+' / '+total+'</div>';
    //$(text1).appendTo(myslides);
    //var img1 = '<img id="image" src=C:\\image\\cellphon\\show\\'+index+'.png>';
    //<img src="data:image/bmp;base64",'+data+' style="width:512">
    var imgdata="data:image/bmp;base64,"+data;
    //alert(imgdata);
    var img1 = '<img src='+imgdata+'>';

    var content = '<div class="owl-item">' + img1 + '</div>';
    owl.trigger('add.owl.carousel', [$(content), 0])
        .trigger('refresh.owl.carousel');

    //alert(img1);
    //$(img1).appendTo(myslides);
    
    /*
    var $min_span = $('<span>');
    $min_span.attr("class", "slidetext");
    $min_span.html(time);
    myslides.append($min_span);
    */
    
    //var text2 = '<div class="slidetext">'+time+'</div>';
    //$(text2).appendTo(myslides);
    
    //$('.slideshow-container').append(myslides);
    //slide.append(myslides);
}

function addSlideArrays(slide){
    $('<a class="slideprev" onclick="plusSlides(-1)">&#10094;</a><a class="slidenext" onclick="plusSlides(1)">&#10095;</a>').appendTo(slide);
}

function addSlideDots(i, slidedot){
    var name = "currentSlide("+i+")";
    $('<span class="dot" onclick='+name+'></span>').appendTo(slidedot);
    //$('<span class="dot" onclick='+name+'></span>').appendTo(slidedot);
}

function displaySlide(){
    if( slideflag == "l8image" ){
	var slides  = $( ".l8-slide" ).find( ".mySlides" );
	var dots = $( ".l8-dot" ).find( ".dot" );
	for( var i = 0; i < slides.length; i++ ){
	    slides[i].style.display = 'block';
	    slides[i].style.visibility = 'visible';
	}
	for( var i = 0; i < dots.length; i++ ){
	    dots[i].style.display = 'block';
	    dots[i].style.visibility = 'visible';
	}
    }
    /*
    $('.slideshow-container')[0].style.display = 'block';
    $('.slideshow-container')[0].style.visibility = 'visible';
    $('.dots')[0].style.display = 'block';
    $('.dots')[0].style.visibility = 'visible';
    */
}

function  hideSlide(){
    if( slideflag == "l8image" ){
	var slides  = $( ".l8-slide" ).find( ".mySlides" );
	var dots = $( ".l8-dot" ).find( ".dot" );
	for( var i = 0; i < slides.length; i++ ){
	    slides[i].style.display = 'none';
	    slides[i].style.visibility = 'none';
	}
	
	for( var i = 0; i < dots.length; i++ ){
	    dots[i].style.display = 'none';
	    dots[i].style.visibility = 'none';
	}
    }
	/*
    $('.slideshow-container')[0].style.display = 'none';
    $('.slideshow-container')[0].style.visibility = 'none';
    $('.dots')[0].style.display = 'none';
    $('.dots')[0].style.visibility = 'none';
	*/
}

function setSlideshow(result) {
    
    var imgCount = result.data.length;
    var pixels = result.width;
    var rows = result.height;
    var sensor = result.sensor;
    var distance = result.distance;
   
    images = [];
    var obj;
    var i;
    var strline = "";
    for( i = 0; i < result.data.length; i++ ){
	obj = result.data[i];
	strline += obj.time + " ";
	var data = obj.imgdata;
	images.push(obj);
    }
    
    var container = document.getElementsByClassName("slideshow-container");
    if( container.length > 0 ) {
	$('.slideshow-container').empty();
	container = document.getElementsByClassName("slideshow-container");
    }

    if( slideflag == "l8image" ){
	var slides = document.createElement("div");
	slides.setAttribute("class", "l8-slide" );
	slides.setAttribute("align", "center");
	for( i = 0; i < imgCount; i++ )
	    addImages( i+1, imgCount, result.data[i].imgdata, result.data[i].time, slides);

	// add prev and next arraws
	addSlideArrays(slides);
	// add dots
	var dots = document.createElement("div");
	dots.setAttribute("class", "l8-dot" );
	dots.setAttribute("text-align", "center");
	for( i = 1; i <= imgCount; i++ ){
	    addSlideDots(i, dots);
	}
	slides.append(dots);
	$('.slideshow-container').append(slides);
	// $('.slideshow-container').append(dots);
    }
}

function showSlides(n){
    var i;
    if ( slideflag == "l8image" ){
	var slides  = $( ".l8-slide" ).find( ".mySlides" );
	var dots = $( ".l8-dot" ).find( ".dot" );
	if (n > slides.length) 
	    {slidepos.l8index = 1}
	else if (n < 1) 
	    {slidepos.l8index = slides.length}
   
	for (i = 0; i < slides.length; i++) {
	    slides[i].style.display = "none";
	}
	for (i = 0; i < dots.length; i++) {
	    dots[i].className = dots[i].className.replace(" active", "");
	}
	slides[slidepos.l8index-1].style.display = "block";
	slides[slidepos.l8index-1].style.visibility = 'visible';
	dots[slidepos.l8index-1].className += " active";
    }
    else if( slideflag == "temperature" ){
	if (n > slides.length) 
	    {slidepos.tempindex = 1}
	else if (n < 1) 
	    {slidepos.tempindex = slides.length}
   
	for (i = 0; i < slides.length; i++) {
	    slides[i].style.display = "none";
	}
	for (i = 0; i < dots.length; i++) {
	    dots[i].className = dots[i].className.replace(" active", "");
	}
	slides[slidepos.tempindex-1].style.display = "block";
	slides[slidepos.tempindex-1].style.visibility = 'visible';
	dots[slidepos.tempindex-1].className += " active";
    }
} 

/*
var carouselTemplate = '<div class="block"><a class="arr-left">LT</a> <a class="arr-right">RT</a> <div class="owl-carousel"><div><img src="http://i.imgur.com/Ud2JynQ.jpg" width:="100" height="50"/></div><div><img src="http://i.imgur.com/Ud2JynQ.jpg" width:="70" height="50"/></div><div><img src="http://i.imgur.com/Ud2JynQ.jpg" width:="100" height="50"/></div></div></div>';

function createAndBindCarousel($element) {
    // Carousel template
    var $owlCarousel = $(carouselTemplate);

    // Insert carousel into element
    $element.append($owlCarousel);

    // Bind carousel
    $owlCarousel.owlCarousel({
        items : 4,
        lazyLoad : true,
        navigation : false
    });

    // Left arrow
    $owlCarousel.find(".arr-left").click(function(){
      $owlCarousel.trigger('owl.prev');
    });
   // Right arrow
    $owlCarousel.find(".arr-right").click(function(){
      $owlCarousel.trigger('owl.next');
    });
}

// Add a new carousel to #carousels
createAndBindCarousel($("#carousels"));

*/


var getLineData = function(line1, line2, labels, type ){
    var lineChartData = {}; //declare an object
    lineChartData.labels = labels; //add 'labels' element to object (X axis)
    lineChartData.datasets = []; //add 'datasets' array element to object

    lineChartData.datasets.push({}); //create a new line dataset
    var dataset = lineChartData.datasets[0];
    dataset.fill = false;
    dataset.borderColor = "#8e5ea2";
    if( type == "temperature"){
	dataset.label = "High temperature";
	dataset.data = line1;
	lineChartData.datasets.push({}); //create a new line dataset
	dataset = lineChartData.datasets[1];
	dataset.data = line2;
	dataset.label = "Low temperature";
    }
    else if( type == "ndvi"){
	dataset.label = "NDVI";
	dataset.data = line1;
    }
    else if( type == "precip"){
	dataset.label = "Precipitation";
	dataset.data = line1;
    }
    else if( type == "moisture"){
	dataset.label = "Moisture";
	dataset.data = line1;
    }
    else if( type == "neeco2"){
	dataset.label = "Net Ecosystem Exchange of CO2 - gC/(m2.day)";
	dataset.data = line1;
    }
    
    dataset.fill = false;
    dataset.borderColor = "#e8c3b9";
    
    return lineChartData;
};
    
var setElementVisible = function(childs, type, bShow){
    for( var i = 0; i < childs.length; i++ ){
	if( childs[i].id == type ){
	    if( bShow ){
		childs[i].style.display = 'block';
		childs[i].style.visibility = 'visible';
		return;
	    }
	}
    }
};

function setOwlSlideshow(result, dataflag) {
    
    var imgCount = result.data.length;
    var pixels = result.width;
    var rows = result.height;
    var sensor = result.sensor;
    var distance = result.distance;
   
    images = [];
    var obj;
    var i;
    var strline = "";
    /*
    for( i = 0; i < result.data.length; i++ ){
	obj = result.data[i];
	strline += obj.time + " ";
	var data = obj.imgdata;
	images.push(obj);
    }
    */
    
    var container = document.getElementsByClassName("slideshow-container");
    if( dataflag == "l8image" ){
	var idiv = document.createElement('div');
	idiv.id = 'owl-demo';
	idiv.className = 'owl-carousel owl-theme';
	container[0].appendChild(idiv);
	//document.getElementsByTagName('slideshow-container')[0].appen
	//document.getElementsByTagName('slideshow-container')[0].append('<div id="owl-demo" class="owl-carousel-v1 margin-bottom-50">');

	var item;
	if( imgCount == 1 )
	    item = 1;
	else if( imgCount == 2 )
	    item = 1;
	else if( imgCount == 3 )
	    item = 2;
	else if( imgCount == 4 )
	    item = 3;
	else if( imgCount == 5 )
	    item = 3;
	else if( imgCount == 6 )
	    item = 4;
	else
	    item = 5;
	
	var slide =  $("#owl-demo");
	var owl = slide.owlCarousel({
	    loop: true,
            margin: 10,
            nav: true,
	    dots:true,
	  
            responsive: {
		0: {
                    items: 1
		},
		600: {
                    items: 3
		},
		1000: {
                    items: 5
		}
            }

	});
	//owl.html("");
	for (var i = 0; i < imgCount; i++) {
	    var margin=" style="+'"'+"margin:5px 5px" +'"';
	    var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
	    var imgdata1 = " title="+result.data[i].time;
	    var imgdata2 = imgdata1 + margin;
	    //var imgdata1 = " figcaption="+result.data[i].time;
	    var imgdata3 = imgdata + imgdata2;
	    var img1 = '<img src='+imgdata3+'>';
	    owl.append(img1);
	}

	//var dots = owl.getElementsByClassName("owl-dots");
	var dosdiff = imgCount - item;
	if( dosdiff > 0 ){
	    var dots = document.createElement('div');
	    dots.id = 'owl-demo-dots';
	    dots.className = 'owl-dots';
	    owl.append(dots);
	    for (var i = 0; i < dosdiff; i++) {
		var dot =  document.createElement('div');
		dot.id = "demo-dot";
		if( i == 0 )
		    dot.className = "owl-dot active";
		else
		    dot.className = "owl-dot";
		var span = document.createElement('span');
		dot.append(span);
		//dot.wrapInner('<span></span>');
		dots.append(dot);
	    }
	}
	/*
	for (var i = 0; i < imgCount; i++) {
	  
	    var oact = '"';
	    if( i == 0 )
		oact = " active"+'"';
	    var otype = "<div class=";
	    var dot = '"'+"owl-dot";
	    var ospan = "><span></span></div>";
	    var comb = otype+dot+oact+ospan;
	    dots.append(comb);
	}
	*/
	//owl.dots=true;

	//var item = '<div class=" item...">your new div</div>';
	//owl.data('owlCarousel').addItem(item); 
	//owl.reinit();
	/*
	slide.owlCarousel({
	    loop: true,
            margin: 10,
            nav: true,
	    items:item,
	    dots:true,
	    center:true
	}).trigger('refresh.owl.carousel');
	*/
	jQuery('.owl-carousel').trigger('refresh.owl.carousel');
	
	/*
	var owl = document.createElement('div');
	owl.id = 'owl-demo';
	owl.className = 'owl-carousel owl-theme';
	owl.owlCarousel({
		navigation : true
		});
	iDiv.style.display = 'block';
	iDiv.style.visibility = 'visible';
	//document.getElementsByTagName('slideshow-container')[0].appendChild(iDiv);
	
	
	setElementVisible(container[0].childNodes, "landsat8", true);
	setElementVisible(container[0].childNodes, "owl-demo", true);
	
        //append images to modal
	var owl = $("#owl-demo");
	owl.html("");
	var content = "";
        for (var i = 0; i < imgCount; i++) {
	    var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
	    var imgdata1 = " title="+result.data[i].time;
	    //var imgdata1 = " figcaption="+result.data[i].time;
	    var imgdata2 = imgdata + imgdata1;
	    var img1 = '<img src='+imgdata2+'>';
	    owl.append(img1);
	}
	setElementVisible(container[0].childNodes, "landsat8", true);
	setElementVisible(container[0].childNodes, "owl-demo", true);
	*/
    }
    else if( dataflag == "reflectance" ){
	setElementVisible(container[0].childNodes, "reflectance", true);
	setElementVisible(container[0].childNodes, "owl-reflectance", true);

        //append images to modal
	var owl = $("#owl-reflectance");
	owl.html("");
	var content = "";
        for (var i = 0; i < imgCount; i++) {
	    var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
	    var imgdata1 = " title="+result.data[i].time;
	    var imgdata2 = imgdata + imgdata1;
	    var img1 = '<img src='+imgdata2+'>';
	    owl.append(img1);
	}
    }
    else if( dataflag == "temperature" ){
	var tempH = [];
	var tempL = [];
	var time = [];
	setElementVisible(container[0].childNodes, "tempchart", true);
	setElementVisible(container[0].childNodes, "chart-tempchart", true);

	for (var i = 0; i < imgCount; i++) {
	    tempH.push(result.data[i].ht);
	    tempL.push(result.data[i].lt);
	    time.push(result.data[i].time);	       
	}
	var lineData = getLineData(tempH, tempL, time, dataflag );
	var ctx = document.getElementById("chart-temperature").getContext("2d");
	ctx.clearRect(0, 0, ctx.width, ctx.height);
	var lineChart = new Chart(ctx, {
		type: 'line',
		data: lineData,
		options: {
		    title: {
			display: true,
			text: 'Temperature Changes'
		    }
		    //showLines: false, // disable for all datasets
		}
	    });
	
	setElementVisible(container[0].childNodes, "temperature", true);
	setElementVisible(container[0].childNodes, "owl-temperature", true);

	var owl = $("#owl-temperature");
	owl.html("");
        for (var i = 0; i < imgCount; i++) {
	    var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
	    var imgdata1 = " title="+result.data[i].time;
	    var imgdata2 = imgdata + imgdata1;
	    var img1 = '<img src='+imgdata2+'>';
	    owl.append(img1);      
	}
    }
    else if( dataflag == "precip" ){
	var precip = [];
	var time = [];
	setElementVisible(container[0].childNodes, "precipchart", true);
	setElementVisible(container[0].childNodes, "chart-precip", true);

	for (var i = 0; i < imgCount; i++) {
	    precip.push(result.data[i].data);
	    time.push(result.data[i].time);	       
	}
	var lineData = getLineData(precip, [], time, dataflag );
	var ctx = document.getElementById("chart-precip").getContext("2d");
	ctx.clearRect(0, 0, ctx.width, ctx.height);
	var lineChart = new Chart(ctx, {
		type: 'line',
		data: lineData,
		options: {
		    title: {
			display: true,
			text: 'Precipitation Changes'
		    }
		    //showLines: false, // disable for all datasets
		}
	    });
    }
    else if( dataflag == "moisture" ){
	var moisture = [];
	var time = [];
	setElementVisible(container[0].childNodes, "moisturechart", true);
	setElementVisible(container[0].childNodes, "chart-moisture", true);

	for (var i = 0; i < imgCount; i++) {
	    moisture.push(result.data[i].data);
	    time.push(result.data[i].time);	       
	}
	var lineData = getLineData(moisture, [], time, dataflag );
	var ctx = document.getElementById("chart-moisture").getContext("2d");
	ctx.clearRect(0, 0, ctx.width, ctx.height);
	var lineChart = new Chart(ctx, {
		type: 'line',
		data: lineData,
		options: {
		    title: {
			display: true,
			text: 'Moisture Changes'
		    }
		    //showLines: false, // disable for all datasets
		}
	    });
    }
    else if( dataflag == "neeco2" ){
	var neeco2 = [];
	var time = [];
	setElementVisible(container[0].childNodes, "neeco2chart", true);
	setElementVisible(container[0].childNodes, "chart-neeco2", true);

	for (var i = 0; i < imgCount; i++) {
	    neeco2.push(result.data[i].data);
	    time.push(result.data[i].time);	       
	}
	var lineData = getLineData(neeco2, [], time, dataflag );
	var ctx = document.getElementById("chart-neeco2").getContext("2d");
	ctx.clearRect(0, 0, ctx.width, ctx.height);
	var lineChart = new Chart(ctx, {
		type: 'line',
		data: lineData,
		options: {
		    title: {
			display: true,
			text: 'Net Ecosystem Exchange of CO2 - gC/(m2.day)'
		    }
		    //showLines: false, // disable for all datasets
		}
	    });
    }
    else if( dataflag == "ndvi" ){
	var ndviData = [];
	var time = [];
	setElementVisible(container[0].childNodes, "ndvichart", true);
	setElementVisible(container[0].childNodes, "chart-ndvi", true);

	imgCount = result.data.length;
	for (var i = 0; i < imgCount; i++) {
	    // ndvi = -1000 is evi data - no chart
	    if( result.data[i].ndvi > -1000 ){
		ndviData.push(result.data[i].ndvi);
		time.push(result.data[i].time);
	    }	       
	}
	var lineData = getLineData(ndviData, [], time, dataflag );
	var ctx = document.getElementById("chart-ndvi").getContext("2d");
	ctx.clearRect(0, 0, ctx.width, ctx.height);
	var lineChart = new Chart(ctx, {
		type: 'line',
		data: lineData,
		options: {
		    title: {
			display: true,
			text: 'NDVI Changes'
		    }
		    //showLines: false, // disable for all datasets
		}
	    });
	
	setElementVisible(container[0].childNodes, "ndvi", true);	
	setElementVisible(container[0].childNodes, "owl-ndvi", true);

	var owl = $("#owl-ndvi");
	owl.html("");
        for (var i = 0; i < imgCount; i++) {
	    if( result.data[i].ndvi > -1000 ){
		var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
		var imgdata1 = " title="+result.data[i].time;
		var imgdata2 = imgdata + imgdata1;
		var img1 = '<img src='+imgdata2+'>';
		owl.append(img1);   
	    }   
	}
	setElementVisible(container[0].childNodes, "evi", true);
	setElementVisible(container[0].childNodes, "owl-evi", true);

	var owl = $("#owl-evi");
	owl.html("");
        for (var i = 0; i < imgCount; i++) {
	    if( result.data[i].ndvi <= -1000 ){
		var imgdata="data:image/bmp;base64,"+result.data[i].imgdata;
		var imgdata1 = " title="+result.data[i].time;
		var imgdata2 = imgdata + imgdata1;
		var img1 = '<img src='+imgdata2+'>';
		owl.append(img1);    
	    }  
	}
    }
};

var initOwlObject = function(owltype, owlInit){
  if( owlType == owll8  ){
      var owl = $( '#owl-demo' );
      owl.owlCarousel({
	      autoplay: true,
		  margin: 2,
		  loop: true,
		  dots: true,
		  items:3
		  });
      owlInit = true;
  }
  else if( owlType == owltemperature ){
      $( '#owl-temperature' ).owlCarousel({
	      navigation : true,
		  title:"Temperature:"
		  });
      owlInit = true;
  }
  else if( owlType == owlreflectance  ){
      $( '#owl-reflectance' ).owlCarousel({
	      title:"Reflectance",
		  autoplay: true,
		  margin: 2,
		  loop: true,
		  dots: true,
		  items:3
		  });
      owlInit = true;
  }
  else if( owlType == owlndvi  ){
      $( '#owl-ndvi' ).owlCarousel({
	      title:"NDVI",
		  autoplay: true,
		  margin: 2,
		  loop: true,
		  dots: true,
		  items:3
		  });
       $( '#owl-evi' ).owlCarousel({
	      title:"EVI",
		  autoplay: true,
		  margin: 2,
		  loop: true,
		  dots: true,
		  items:3
		  });
      owlInit = true;
  }
};


function json2array(json){
    var result = [];
    var keys = Object.keys(json);
    keys.forEach(function(key){
        result.push(json[key]);
    });
    return result;
}

var owll8 = false;
var owltemperature = false;
var owlreflectance = false;
var owlndvi = false;

// query the server for the given point 
$(document).ready(function(){
    $("#selectedParams").click(function(){

	    var lng = $('#longitude').val();
	    var lat = $('#latitude').val();
	    var Ldistance = $('#distance').val();
	    if( Ldistance == 0 )
		Ldistance = 1250;
	    else if( Ldistance == 1 )
		Ldistance = 2500;
	    else if( Ldistance == 2 )
		Ldistance = 5000;
	    else
		alert( "distance wrong!");

	    //var areacover = $('#areatocover').val();
	    var Lsensor = $('#sensor').val();
	    if(Lsensor ==0 )
		Lsensor = "L8";
	    else if( Lsensor==1)
		Lsensor = "S1";
	    else if( Lsensor==2)
		Lsensor="S2";
	    else
		alert("Sensor wrong!");

	    var Lcloud = $('#cloud').val();
	    if( Lcloud == 0 )
		Lcloud = 5;
	    else if( Lcloud == 1 )
		Lcloud = 10;
	    else if( Lcloud == 2 )
		Lcloud = 15;
	    else if( Lcloud == 3 )
		Lcloud = 20;
	    else
		Lcloud = 10;
	    
	    /* MODIS data starting time and interval time */
	    var beginning = "100";
	    var timeInterval = "";
	    var LimageInterval = $('#imageInterval').val();
	    if( imageInterval == 0 )
		timeInterval = "365";
	    else if( LimageInterval == 1 )
		timeInterval = "7";
	    else if( LimageInterval == 2 )
		timeInterval = "30";
	    else if( LimageInterval == 3 )
		timeInterval = "365";
	    else if( LimageInterval == 4 )
		timeInterval = "8";
	    else if( LimageInterval == 5 )
		timeInterval = "16";
	    else
		timeInterval = "32";

	    var Lsttime = $('#dp4').val();
	    var Lendtime = $('#dp5').val();
	   
	    var surfRef =  $('#surfRef').is(':checked');
	    var ndvi = $('#ndvi').is(':checked');
	    var evi = ndvi;
	var temperature = $('#surfTemp').is(':checked');
	var moisture = $('#surfMoist').is(':checked');
	    var precip =  $('#precip').is(':checked');
	    var neeco2 = $('#neeco2').is(':checked');
	    var evaptrans = $('#evaptrans').is(':checked');
	    var wind =  $('#wind').is(':checked');
	    var forcast =  $('#forcat').is(':checked');
	    var surfrad = $('#surfRad').is(':checked');
	    var soiltype = $('#soilType').is(':checked');
	    var dem = $('#dem').is(':checked');
	var drought =  $('#drought').is(':checked');

	var areacover = "";
	var areacode = $('#areaNames').val();
	if( areacode == 0 )
	    areacover = "county";
	else if( areacode == 1 )
	    areacover = "province";
	else if( areacode == 2 )
	    areacover = "country";
	 
	  
	    //alert( "Temp: " + temperature );


	    // for within polygon
	    var poly = [];
	    var operType = "near"; 
	    if( operType == "within" )
		{ 
		    // canada boundary
		    poly.push(-124.0);
		    poly.push(48.0);
		    poly.push(-140.0);
		    poly.push(60.0);
		    poly.push(-140.0);
		    poly.push(65.5);
		    poly.push(-58.6);
		    poly.push(65.5);
		    poly.push(-52.0);
		    poly.push(45.0);
		    poly.push(-82.7);
		    poly.push(42.0);
		    poly.push(-95.0);
		    poly.push(49.0);
		    poly.push(-124.0);
		    poly.push(48.0);
		};


	    var mapROI = [];
	    var obj = {
		longitude: lng,
		latitude: lat,
		distance: Ldistance,
		sensor : Lsensor,
		cloud : Lcloud,
		beginning : beginning,
		timeInterval : timeInterval,
		reflectance:surfRef,
		ndvi:ndvi,
		temperature:temperature,
		moisture:moisture,
		radiation:surfrad,
		evap:evaptrans,
		soiltype:soiltype,
		dem:dem,
		precip:precip,
		neeco2:neeco2,
		wind:wind,
		drought:drought,
		forcast:forcast,

		areacover:areacover,
		
		starttime : Lsttime,
		endtime : Lendtime,
		// near - for normal query
		// within - back process - given a polygon to find its inside documents
	
		queryType: operType,
		polygon: poly
	    };
	    
	    

	    if( owll8 == false ){
		var owl = $( '#owl-demo' );
		owl.owlCarousel({
		     autoplay: true,
			 margin: 2,
			 loop: true,
			 dots: true,
			 items:3
			 });
		owll8 = true;
	    }
	    if( owltemperature == false ){
		$( '#owl-temperature' ).owlCarousel({
			navigation : true,
			    title:"Temperature:"
			    });
		owltemperature = true;
	    }
	    if( owlreflectance == false ){
		$( '#owl-reflectance' ).owlCarousel({
			title:"Reflectance",
			 autoplay: true,
			 margin: 2,
			 loop: true,
			 dots: true,
			 items:3
			    });
		owlreflectance = true;
	    }

	    /*
	      var owl = $("#owl-demo");
 
	      owl.owlCarousel({
		      items : 10, //10 items above 1000px browser width
			  itemsDesktop : [1000,5], //5 items between 1000px and 901px
			  itemsDesktopSmall : [900,3], // betweem 900px and 601px
			  itemsTablet: [600,2], //2 items between 600 and 0
			  itemsMobile : false // itemsMobile disabled - inherit from itemsTablet option
			  });
	    */
	      
	    mapROI.push(obj);
	    var jsonArray = JSON.parse(JSON.stringify(mapROI));
	    
	    var images = [];
	    
	    $.ajax({
		    type: "GET",
			crossDomain: true,
			url: "/api/maploc",
			data:  obj,
			dataType: "json",
			success: function (result) {
				
			if( result.error == "None" ){
			    if( result.l8image != null ){
				/*
				var owl = $( '#owl-demo' );
				owl.owlCarousel({
					 navigation : true
					    });*/
				setOwlSlideshow( result.l8image, "l8image" );
			    }
		        
			    if( result.reflectance != null ) {
				  if( owlreflectance == false ){
				      console.log("In REFLECTANCE: ");
				      $( '#owl-reflectance' ).owlCarousel({
					      navigation : true,
						  title:"Reflectance:"
						  });
				      owlreflectance = true;
				  }
				  setOwlSlideshow(result.reflectance, "reflectance" );
			    }
			    if( result.ndvi != null ) {
				  if( owlndvi == false ){
				      console.log("In NDVI: ");
				      $( '#owl-ndvi' ).owlCarousel({
					      navigation : true,
						  title:"NDVI:"
						  });
				      owlndvi = true;
				  }
				  setOwlSlideshow(result.ndvi, "ndvi" );
			    }

			    if( result.temperature != null ) 
				setOwlSlideshow(result.temperature, "temperature" );

			    if( result.precip != null ) {
				console.log("In Precip: ");
				setOwlSlideshow(result.precip, "precip" );
			    }
			    if( result.moisture != null ) {
				console.log("In Moisture: ");
				setOwlSlideshow(result.moisture, "moisture" );
			    }
			    if( result.neeco2 != null ) {
				console.log("In NEE-CO2: ");
				setOwlSlideshow(result.neeco2, "neeco2" );
			    }
			}
			else {
			    alert( result.error );
			    }	
			
			//do somthing here
		    }
		});
	     		       
    });
});
